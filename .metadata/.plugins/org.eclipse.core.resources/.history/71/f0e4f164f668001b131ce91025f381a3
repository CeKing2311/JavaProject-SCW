package com.ceking.crowd.controller;

import java.util.concurrent.TimeUnit;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.redis.core.StringRedisTemplate;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.ceking.crowd.util.ResultEntity;

@RestController
public class RedisController {
	
	@Autowired
	private StringRedisTemplate stringRedisTemplate;
	
	@RequestMapping("/set/redis/key/value/remote")
	ResultEntity<String> setRedisKeyValueRemote(
			@RequestParam("key")String key,
			@RequestParam("value") String value){
		return null;
	}
	
	@RequestMapping("/set/redis/key/value/remote/with/time/out")
	ResultEntity<String> setRedisKeyValueRemoteWithTimeOut(
			@RequestParam("key")String key,
			@RequestParam("value") String value,
			@RequestParam("time") long time,
			@RequestParam("timeUnit") TimeUnit timeUnit){
		return null;
	}
		
	@RequestMapping("/get/redis/string/value/by/key/remote")
	ResultEntity<String> getRedisStringValueByKeyRemote(@RequestParam("key") String key){
		return null;
	}
	
	@RequestMapping("/remove/redis/key/remote")
	ResultEntity<String> removeRedisKeyRemote(@RequestParam("key") String key){
		return null;
	}
}
